<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.6//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_6.dtd'>
<nta>
	<declaration>// ENEMIES
const int SQUARE = 0;
const int CIRCLE = 1;
const int N_ENEMIES = 700;
typedef int[0, N_ENEMIES-1] enemy_int;

typedef struct {
     int speed;
     int initial_health;
     int damage;
     int spawn_delay;
} enemy_t;

const enemy_t ENEMIES[2] = { { 3, 20, 4, 3}, {1, 10, 4, 2} }; // 0-square, 1-circle

// TURRETS
const int N_TURRETS = 7;
typedef int[0, N_TURRETS-1] turret_int;

typedef struct {
     int shooting_range;
     int fire_speed;
     int inflicted_damage;
} turret_t;

const turret_t TURRETS[3] = { {2, 2, 2}, {1, 7, 5}, {4, 20, 8} }; // 0-basic, 1-cannon, 2-sniper

// COMMON
int coord_x[N_ENEMIES];
int coord_y[N_ENEMIES];
int enemy_health[N_ENEMIES];
int enemy_type[N_ENEMIES];
int birth_time[N_ENEMIES];
bool alive[N_ENEMIES];
int main_tower_reached_time[N_ENEMIES];
bool end_game = false;
bool damaged = false;

// OTHER
int main_tower_life_points = 100;

// CHANNELS
broadcast chan move[N_ENEMIES];
broadcast chan scan, dam;
urgent broadcast chan asap;

// CLOCKS
clock t, d, time_undamaged;
int int_c = 0;

// QUERIES CONTROL</declaration>
	<template>
		<name>MainTowerDamagedUtility</name>
		<location id="id0" x="110" y="0">
			<label kind="invariant" x="93" y="17">time_undamaged' == 0</label>
		</location>
		<location id="id1" x="-170" y="0">
		</location>
		<init ref="id1"/>
		<transition id="id2">
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="guard" x="-68" y="-25">damaged</label>
			<label kind="synchronisation" x="-42" y="17">asap!</label>
		</transition>
	</template>
	<template>
		<name>GameTime</name>
		<declaration>const int timeout = 203;</declaration>
		<location id="id3" x="-391" y="-51">
			<name x="-382" y="-85">game_on</name>
			<label kind="invariant" x="-382" y="-8">d &lt;= 1 &amp;&amp; t &lt;= timeout</label>
		</location>
		<location id="id4" x="-51" y="-51">
			<name x="-34" y="-85">game_end</name>
			<label kind="invariant" x="-25" y="-42">d &lt;= 1</label>
		</location>
		<init ref="id3"/>
		<transition id="id5">
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="0" y="0">d &gt;= 1</label>
			<label kind="assignment" x="-25" y="42">d = 0</label>
			<nail x="-51" y="68"/>
			<nail x="68" y="68"/>
			<nail x="68" y="-51"/>
		</transition>
		<transition id="id6">
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-501" y="-42">d &gt;= 1 &amp;&amp;
!end_game &amp;&amp;
t &lt;= timeout</label>
			<label kind="assignment" x="-476" y="25">d = 0,
int_c++</label>
			<nail x="-510" y="-51"/>
			<nail x="-510" y="68"/>
			<nail x="-391" y="68"/>
		</transition>
		<transition id="id7">
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-263" y="-161">end_game</label>
			<nail x="-391" y="-136"/>
			<nail x="-51" y="-136"/>
		</transition>
		<transition id="id8">
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-289" y="-76">t &gt;= timeout &amp;&amp; !end_game</label>
			<label kind="assignment" x="-280" y="-51">end_game = true,
d = 0</label>
		</transition>
	</template>
	<template>
		<name>Turret</name>
		<parameter>const int type_turret, const int coord_x_turret, const int coord_y_turret</parameter>
		<declaration>bool just_shot = false;

int max(int a, int b) {
    return a &gt; b ? a : b;
}

void bang(int i) {
    int j; // iterator for the end game check
    bool found_alive=false; // utility for the end game check
    enemy_health[i] = enemy_health[i] - TURRETS[type_turret].inflicted_damage; // shoot the enemy
    if (enemy_health[i] &lt;= 0) { // if the enemy is killed...
        alive[i]= false; // unalive the enemy
        for (j = 0; j &lt; N_ENEMIES &amp;&amp; !found_alive; j++) { // end game check, for every enemy...
            if(alive[j]){ // if alive the game continues
                found_alive=true;
            }
        }
        if(!found_alive) { // victory! last enemy has been killed now :)
            end_game=true;
        }
    }
    just_shot = true;
}

void scan_for_enemies() {
    int enemy_to_shoot = -1;          // which enemy to shoot (-1 means none)
    int closest_distance = TURRETS[type_turret].shooting_range + 1;
    int earliest_birth_time = -1;
    int i;                            // iterator
    int distance;                     // current enemy distance

    for (i = 0; i &lt; N_ENEMIES; i++) {
        if (alive[i]) {
            distance = max(abs(coord_x[i] - coord_x_turret), 
                        abs(coord_y[i] - coord_y_turret));

            if (distance &lt;= TURRETS[type_turret].shooting_range) {
                if (distance &lt; closest_distance) {
                    // New closest enemy found
                    closest_distance = distance;
                    enemy_to_shoot = i;
                    earliest_birth_time = birth_time[i];
                } 
                else if (distance == closest_distance) {
                    // Tie-breaking needed
                    if (birth_time[i] &lt; earliest_birth_time) {
                        // Prefer enemy that spawned earlier
                        enemy_to_shoot = i;
                        earliest_birth_time = birth_time[i];
                    }
                    else if (birth_time[i] == earliest_birth_time &amp;&amp; enemy_type[i] == SQUARE) {
                        // If same spawn time, prefer squares (type 0)
                        enemy_to_shoot = i;
                        earliest_birth_time = birth_time[i];
                    }
                }
            }
        }
    }

    if (enemy_to_shoot != -1) {
        bang(enemy_to_shoot);
        just_shot = true;
    } else {
        just_shot = false;
    }
}</declaration>
		<location id="id9" x="102" y="-136">
			<name x="119" y="-170">ready_to_shoot</name>
			<label kind="exponentialrate" x="127" y="-136">1</label>
		</location>
		<location id="id10" x="-544" y="-136">
			<name x="-620" y="-127">waiting</name>
			<label kind="exponentialrate" x="-833" y="-170">1:TURRETS[type_turret].fire_speed</label>
		</location>
		<location id="id11" x="-170" y="68">
			<name x="-161" y="77">turret_sink</name>
		</location>
		<location id="id12" x="-170" y="-136">
			<urgent/>
		</location>
		<init ref="id9"/>
		<transition id="id13">
			<source ref="id10"/>
			<target ref="id12"/>
			<label kind="guard" x="-391" y="-255">!end_game</label>
			<label kind="assignment" x="-544" y="-221">scan_for_enemies()</label>
			<nail x="-272" y="-246"/>
		</transition>
		<transition id="id14">
			<source ref="id12"/>
			<target ref="id9"/>
			<label kind="guard" x="-136" y="-263">!just_shot &amp;&amp; !end_game</label>
			<nail x="-170" y="-238"/>
			<nail x="102" y="-238"/>
		</transition>
		<transition id="id15">
			<source ref="id12"/>
			<target ref="id11"/>
			<label kind="guard" x="-51" y="-17">end_game</label>
		</transition>
		<transition id="id16">
			<source ref="id12"/>
			<target ref="id10"/>
			<label kind="guard" x="-391" y="-161">just_shot &amp;&amp; !end_game</label>
		</transition>
		<transition id="id17">
			<source ref="id9"/>
			<target ref="id12"/>
			<label kind="guard" x="-68" y="-161">!end_game</label>
			<label kind="synchronisation" x="-119" y="-161">scan?</label>
			<label kind="assignment" x="-110" y="-127">scan_for_enemies()</label>
		</transition>
		<transition id="id18">
			<source ref="id10"/>
			<target ref="id11"/>
			<label kind="guard" x="-399" y="-17">end_game</label>
		</transition>
		<transition id="id19">
			<source ref="id9"/>
			<target ref="id11"/>
			<label kind="guard" x="-161" y="-42">end_game</label>
		</transition>
	</template>
	<template>
		<name>Enemy</name>
		<parameter>const enemy_int id, const int type</parameter>
		<declaration>void reached_main_tower() {
    main_tower_reached_time[id] = int_c;
    coord_x[id] = 15;
    coord_y[id] = 4;
    if (alive[id]) {
        main_tower_life_points = main_tower_life_points-ENEMIES[type].damage;
        if (main_tower_life_points&lt;=0) {
            end_game=true;
        }
    }
    damaged = true;
}</declaration>
		<location id="id20" x="442" y="-204">
			<urgent/>
		</location>
		<location id="id21" x="229" y="-68">
			<urgent/>
		</location>
		<location id="id22" x="1105" y="-68">
			<name x="1097" y="-102">out_of_map</name>
		</location>
		<location id="id23" x="646" y="-68">
		</location>
		<location id="id24" x="578" y="-68">
		</location>
		<location id="id25" x="510" y="-68">
		</location>
		<location id="id26" x="442" y="-68">
		</location>
		<location id="id27" x="374" y="-68">
		</location>
		<location id="id28" x="374" y="-136">
		</location>
		<location id="id29" x="374" y="-204">
		</location>
		<location id="id30" x="714" y="-136">
		</location>
		<location id="id31" x="714" y="-204">
		</location>
		<location id="id32" x="714" y="-68">
			<name x="731" y="-93">main_tower</name>
		</location>
		<location id="id33" x="714" y="0">
		</location>
		<location id="id34" x="714" y="68">
		</location>
		<location id="id35" x="714" y="136">
		</location>
		<location id="id36" x="646" y="136">
		</location>
		<location id="id37" x="578" y="136">
		</location>
		<location id="id38" x="510" y="136">
		</location>
		<location id="id39" x="442" y="136">
		</location>
		<location id="id40" x="374" y="136">
		</location>
		<location id="id41" x="306" y="136">
		</location>
		<location id="id42" x="238" y="136">
		</location>
		<location id="id43" x="714" y="-272">
		</location>
		<location id="id44" x="646" y="-272">
		</location>
		<location id="id45" x="578" y="-272">
		</location>
		<location id="id46" x="510" y="-272">
		</location>
		<location id="id47" x="442" y="-272">
		</location>
		<location id="id48" x="374" y="-272">
		</location>
		<location id="id49" x="306" y="-272">
		</location>
		<location id="id50" x="238" y="-272">
		</location>
		<location id="id51" x="170" y="136">
		</location>
		<location id="id52" x="170" y="68">
		</location>
		<location id="id53" x="170" y="0">
		</location>
		<location id="id54" x="170" y="-272">
		</location>
		<location id="id55" x="170" y="-204">
		</location>
		<location id="id56" x="170" y="-136">
		</location>
		<location id="id57" x="170" y="-68">
		</location>
		<location id="id58" x="102" y="-68">
		</location>
		<location id="id59" x="34" y="-68">
		</location>
		<location id="id60" x="-34" y="-68">
		</location>
		<location id="id61" x="-102" y="-68">
		</location>
		<location id="id62" x="-170" y="-68">
		</location>
		<location id="id63" x="-238" y="-68">
		</location>
		<location id="id64" x="-306" y="-68">
		</location>
		<location id="id65" x="-306" y="0">
		</location>
		<location id="id66" x="-306" y="68">
		</location>
		<location id="id67" x="-306" y="136">
		</location>
		<location id="id68" x="-306" y="204">
			<name x="-289" y="212">spawn_point</name>
		</location>
		<init ref="id68"/>
		<transition id="id69">
			<source ref="id20"/>
			<target ref="id29"/>
			<label kind="assignment" x="586" y="-178">coord_x[id]=10,
coord_y[id]=6</label>
		</transition>
		<transition id="id70">
			<source ref="id20"/>
			<target ref="id47"/>
			<label kind="assignment" x="467" y="-246">coord_x[id]=11,
coord_y[id]=7</label>
		</transition>
		<transition id="id71">
			<source ref="id48"/>
			<target ref="id20"/>
			<label kind="synchronisation" x="323" y="-246">move[id]?</label>
		</transition>
		<transition id="id72">
			<source ref="id21"/>
			<target ref="id53"/>
			<label kind="assignment" x="199" y="-34">coord_x[id]=7,
coord_y[id]=3</label>
		</transition>
		<transition id="id73">
			<source ref="id21"/>
			<target ref="id56"/>
			<label kind="assignment" x="263" y="-127">coord_x[id]=7,
coord_y[id]=5</label>
		</transition>
		<transition id="id74">
			<source ref="id57"/>
			<target ref="id21"/>
			<label kind="synchronisation" x="255" y="-76">move[id]?</label>
			<nail x="187" y="-68"/>
		</transition>
		<transition id="id75">
			<source ref="id32"/>
			<target ref="id22"/>
			<label kind="synchronisation" x="918" y="-93">move[id]?</label>
			<label kind="assignment" x="901" y="-59">alive[id]= false</label>
		</transition>
		<transition id="id76">
			<source ref="id23"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="629" y="-51">move[id]?</label>
			<label kind="assignment" x="536" y="-102">reached_main_tower()</label>
		</transition>
		<transition id="id77">
			<source ref="id24"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="570" y="-34">move[id]?</label>
			<label kind="assignment" x="527" y="26">coord_x[id]=14,
coord_y[id]=4</label>
		</transition>
		<transition id="id78">
			<source ref="id25"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="510" y="-51">move[id]?</label>
			<label kind="assignment" x="442" y="-17">coord_x[id]=13,
coord_y[id]=4</label>
		</transition>
		<transition id="id79">
			<source ref="id26"/>
			<target ref="id25"/>
			<label kind="synchronisation" x="434" y="-34">move[id]?</label>
			<label kind="assignment" x="383" y="26">coord_x[id]=12,
coord_y[id]=4</label>
		</transition>
		<transition id="id80">
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="synchronisation" x="374" y="-51">move[id]?</label>
			<label kind="assignment" x="315" y="-17">coord_x[id]=11,
coord_y[id]=4</label>
		</transition>
		<transition id="id81">
			<source ref="id28"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="383" y="-127">move[id]?</label>
			<label kind="assignment" x="459" y="-144">coord_x[id]=10,
coord_y[id]=4</label>
		</transition>
		<transition id="id82">
			<source ref="id29"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="383" y="-187">move[id]?</label>
			<label kind="assignment" x="468" y="-195">coord_x[id]=10,
coord_y[id]=5</label>
		</transition>
		<transition id="id83">
			<source ref="id30"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="723" y="-127">move[id]?</label>
			<label kind="assignment" x="816" y="-127">reached_main_tower()</label>
		</transition>
		<transition id="id84">
			<source ref="id31"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="723" y="-178">move[id]?</label>
			<label kind="assignment" x="808" y="-187">coord_x[id]=15,
coord_y[id]=5</label>
		</transition>
		<transition id="id85">
			<source ref="id43"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="723" y="-246">move[id]?</label>
			<label kind="assignment" x="808" y="-255">coord_x[id]=15,
coord_y[id]=6</label>
		</transition>
		<transition id="id86">
			<source ref="id33"/>
			<target ref="id32"/>
			<label kind="synchronisation" x="723" y="-42">move[id]?</label>
			<label kind="assignment" x="731" y="-25">reached_main_tower()</label>
		</transition>
		<transition id="id87">
			<source ref="id34"/>
			<target ref="id33"/>
			<label kind="synchronisation" x="723" y="34">move[id]?</label>
			<label kind="assignment" x="808" y="26">coord_x[id]=15,
coord_y[id]=3</label>
		</transition>
		<transition id="id88">
			<source ref="id35"/>
			<target ref="id34"/>
			<label kind="synchronisation" x="723" y="94">move[id]?</label>
			<label kind="assignment" x="808" y="85">coord_x[id]=15,
coord_y[id]=2</label>
		</transition>
		<transition id="id89">
			<source ref="id36"/>
			<target ref="id35"/>
			<label kind="synchronisation" x="646" y="170">move[id]?</label>
			<label kind="assignment" x="638" y="238">coord_x[id]=15,
coord_y[id]=1</label>
		</transition>
		<transition id="id90">
			<source ref="id37"/>
			<target ref="id36"/>
			<label kind="synchronisation" x="578" y="153">move[id]?</label>
			<label kind="assignment" x="570" y="196">coord_x[id]=14,
coord_y[id]=1</label>
		</transition>
		<transition id="id91">
			<source ref="id38"/>
			<target ref="id37"/>
			<label kind="synchronisation" x="502" y="170">move[id]?</label>
			<label kind="assignment" x="502" y="238">coord_x[id]=13,
coord_y[id]=1</label>
		</transition>
		<transition id="id92">
			<source ref="id39"/>
			<target ref="id38"/>
			<label kind="synchronisation" x="442" y="153">move[id]?</label>
			<label kind="assignment" x="434" y="196">coord_x[id]=12,
coord_y[id]=1</label>
		</transition>
		<transition id="id93">
			<source ref="id40"/>
			<target ref="id39"/>
			<label kind="synchronisation" x="374" y="170">move[id]?</label>
			<label kind="assignment" x="366" y="238">coord_x[id]=11,
coord_y[id]=1</label>
		</transition>
		<transition id="id94">
			<source ref="id41"/>
			<target ref="id40"/>
			<label kind="synchronisation" x="306" y="153">move[id]?</label>
			<label kind="assignment" x="289" y="196">coord_x[id]=10,
coord_y[id]=1</label>
		</transition>
		<transition id="id95">
			<source ref="id42"/>
			<target ref="id41"/>
			<label kind="synchronisation" x="238" y="170">move[id]?</label>
			<label kind="assignment" x="221" y="238">coord_x[id]=9,
coord_y[id]=1</label>
		</transition>
		<transition id="id96">
			<source ref="id51"/>
			<target ref="id42"/>
			<label kind="synchronisation" x="170" y="153">move[id]?</label>
			<label kind="assignment" x="145" y="196">coord_x[id]=8,
coord_y[id]=1</label>
		</transition>
		<transition id="id97">
			<source ref="id44"/>
			<target ref="id43"/>
			<label kind="synchronisation" x="655" y="-306">move[id]?</label>
			<label kind="assignment" x="638" y="-374">coord_x[id]=15,
coord_y[id]=7</label>
		</transition>
		<transition id="id98">
			<source ref="id45"/>
			<target ref="id44"/>
			<label kind="synchronisation" x="578" y="-331">move[id]?</label>
			<label kind="assignment" x="570" y="-416">coord_x[id]=14,
coord_y[id]=7</label>
		</transition>
		<transition id="id99">
			<source ref="id46"/>
			<target ref="id45"/>
			<label kind="synchronisation" x="510" y="-306">move[id]?</label>
			<label kind="assignment" x="493" y="-365">coord_x[id]=13,
coord_y[id]=7</label>
		</transition>
		<transition id="id100">
			<source ref="id47"/>
			<target ref="id46"/>
			<label kind="synchronisation" x="442" y="-331">move[id]?</label>
			<label kind="assignment" x="434" y="-416">coord_x[id]=12,
coord_y[id]=7</label>
		</transition>
		<transition id="id101">
			<source ref="id49"/>
			<target ref="id48"/>
			<label kind="synchronisation" x="315" y="-323">move[id]?</label>
			<label kind="assignment" x="298" y="-416">coord_x[id]=10,
coord_y[id]=7</label>
		</transition>
		<transition id="id102">
			<source ref="id50"/>
			<target ref="id49"/>
			<label kind="synchronisation" x="238" y="-306">move[id]?</label>
			<label kind="assignment" x="221" y="-365">coord_x[id]=9,
coord_y[id]=7</label>
		</transition>
		<transition id="id103">
			<source ref="id54"/>
			<target ref="id50"/>
			<label kind="synchronisation" x="170" y="-323">move[id]?</label>
			<label kind="assignment" x="153" y="-416">coord_x[id]=8,
coord_y[id]=7</label>
		</transition>
		<transition id="id104">
			<source ref="id52"/>
			<target ref="id51"/>
			<label kind="synchronisation" x="85" y="85">move[id]?</label>
			<label kind="assignment" x="179" y="77">coord_x[id]=7,
coord_y[id]=1</label>
		</transition>
		<transition id="id105">
			<source ref="id53"/>
			<target ref="id52"/>
			<label kind="synchronisation" x="85" y="26">move[id]?</label>
			<label kind="assignment" x="179" y="17">coord_x[id]=7,
coord_y[id]=2</label>
		</transition>
		<transition id="id106">
			<source ref="id55"/>
			<target ref="id54"/>
			<label kind="synchronisation" x="187" y="-238">move[id]?</label>
			<label kind="assignment" x="230" y="-221">coord_x[id]=7,
coord_y[id]=7</label>
		</transition>
		<transition id="id107">
			<source ref="id56"/>
			<target ref="id55"/>
			<label kind="synchronisation" x="179" y="-178">move[id]?</label>
			<label kind="assignment" x="230" y="-161">coord_x[id]=7,
coord_y[id]=6</label>
		</transition>
		<transition id="id108">
			<source ref="id58"/>
			<target ref="id57"/>
			<label kind="synchronisation" x="85" y="-102">move[id]?</label>
			<label kind="assignment" x="43" y="-51">coord_x[id]=7,
coord_y[id]=4</label>
		</transition>
		<transition id="id109">
			<source ref="id59"/>
			<target ref="id58"/>
			<label kind="synchronisation" x="34" y="-127">move[id]?</label>
			<label kind="assignment" x="17" y="-221">coord_x[id]=6,
coord_y[id]=4</label>
		</transition>
		<transition id="id110">
			<source ref="id60"/>
			<target ref="id59"/>
			<label kind="synchronisation" x="-34" y="-102">move[id]?</label>
			<label kind="assignment" x="-42" y="-170">coord_x[id]=5,
coord_y[id]=4</label>
		</transition>
		<transition id="id111">
			<source ref="id61"/>
			<target ref="id60"/>
			<label kind="synchronisation" x="-102" y="-127">move[id]?</label>
			<label kind="assignment" x="-110" y="-221">coord_x[id]=4,
coord_y[id]=4</label>
		</transition>
		<transition id="id112">
			<source ref="id62"/>
			<target ref="id61"/>
			<label kind="synchronisation" x="-170" y="-102">move[id]?</label>
			<label kind="assignment" x="-187" y="-170">coord_x[id]=3,
coord_y[id]=4</label>
		</transition>
		<transition id="id113">
			<source ref="id63"/>
			<target ref="id62"/>
			<label kind="synchronisation" x="-246" y="-127">move[id]?</label>
			<label kind="assignment" x="-263" y="-221">coord_x[id]=2,
coord_y[id]=4</label>
		</transition>
		<transition id="id114">
			<source ref="id64"/>
			<target ref="id63"/>
			<label kind="synchronisation" x="-306" y="-110">move[id]?</label>
			<label kind="assignment" x="-340" y="-161">coord_x[id]=1,
coord_y[id]=4</label>
		</transition>
		<transition id="id115">
			<source ref="id65"/>
			<target ref="id64"/>
			<label kind="synchronisation" x="-297" y="-42">move[id]?</label>
			<label kind="assignment" x="-204" y="-42">coord_x[id]=0,
coord_y[id]=4</label>
		</transition>
		<transition id="id116">
			<source ref="id66"/>
			<target ref="id65"/>
			<label kind="synchronisation" x="-297" y="26">move[id]?</label>
			<label kind="assignment" x="-204" y="17">coord_x[id]=0,
coord_y[id]=3</label>
		</transition>
		<transition id="id117">
			<source ref="id67"/>
			<target ref="id66"/>
			<label kind="synchronisation" x="-297" y="94">move[id]?</label>
			<label kind="assignment" x="-204" y="85">coord_x[id]=0,
coord_y[id]=2</label>
		</transition>
		<transition id="id118">
			<source ref="id68"/>
			<target ref="id67"/>
			<label kind="synchronisation" x="-297" y="162">move[id]?</label>
			<label kind="assignment" x="-212" y="162">coord_x[id] = 0,
coord_y[id] = 1</label>
		</transition>
	</template>
	<template>
		<name>EnemyP</name>
		<parameter>const enemy_int id, const int type, const int serial_number</parameter>
		<declaration>void initialize() {
    coord_x[id] = 0;
    coord_y[id] = 0;
    enemy_type[id] = type;
    enemy_health[id] = ENEMIES[type].initial_health;
    birth_time[id] = serial_number * ENEMIES[type].spawn_delay;
    alive[id] = true;
    main_tower_reached_time[id] = 0;
}</declaration>
		<location id="id119" x="-348" y="-34">
			<urgent/>
		</location>
		<location id="id120" x="-544" y="-34">
			<name x="-603" y="-68">idle</name>
			<label kind="exponentialrate" x="-748" y="-17">ENEMIES[type].speed:10</label>
		</location>
		<location id="id121" x="-1156" y="-34">
			<name x="-1139" y="-68">not_born</name>
			<label kind="invariant" x="-1334" y="-59">t &lt;= birth_time[id]</label>
		</location>
		<location id="id122" x="-68" y="-238">
			<name x="-289" y="-272">outside_or_dead_or_game_end</name>
		</location>
		<location id="id123" x="-144" y="-34">
			<urgent/>
		</location>
		<location id="id124" x="-1394" y="51">
			<urgent/>
		</location>
		<init ref="id124"/>
		<transition id="id125">
			<source ref="id119"/>
			<target ref="id123"/>
			<label kind="synchronisation" x="-263" y="-59">scan!</label>
		</transition>
		<transition id="id126">
			<source ref="id120"/>
			<target ref="id119"/>
			<label kind="guard" x="-527" y="-17">!end_game &amp;&amp; alive[id]</label>
			<label kind="synchronisation" x="-442" y="-59">move[id]!</label>
		</transition>
		<transition id="id127">
			<source ref="id120"/>
			<target ref="id122"/>
			<label kind="guard" x="-535" y="-153">!alive[id]</label>
			<nail x="-544" y="-238"/>
		</transition>
		<transition id="id128">
			<source ref="id124"/>
			<target ref="id121"/>
			<label kind="assignment" x="-1309" y="25">initialize()</label>
		</transition>
		<transition id="id129">
			<source ref="id123"/>
			<target ref="id122"/>
			<label kind="guard" x="-204" y="-93">end_game</label>
		</transition>
		<transition id="id130">
			<source ref="id123"/>
			<target ref="id120"/>
			<label kind="guard" x="-229" y="42">!end_game</label>
			<nail x="-144" y="68"/>
			<nail x="-544" y="68"/>
		</transition>
		<transition id="id131">
			<source ref="id120"/>
			<target ref="id122"/>
			<label kind="guard" x="-493" y="-110">end_game</label>
		</transition>
		<transition id="id132">
			<source ref="id121"/>
			<target ref="id122"/>
			<label kind="guard" x="-1138" y="102">end_game</label>
			<nail x="-1156" y="136"/>
			<nail x="-68" y="136"/>
		</transition>
		<transition id="id133">
			<source ref="id121"/>
			<target ref="id120"/>
			<label kind="guard" x="-1105" y="-25">t &gt;= birth_time[id] &amp;&amp; !end_game</label>
			<label kind="synchronisation" x="-867" y="-59">scan!</label>
		</transition>
	</template>
	<system>// Given Example
Turret0 = Turret(0, 5, 5);
Turret1 = Turret(1, 8, 2);
Turret2 = Turret(1, 8, 6);
Turret3 = Turret(1, 14, 2);
Turret4 = Turret(1, 14, 6);
Turret5 = Turret(2, 2, 3);
Turret6 = Turret(2, 11, 5);

// Example 2 -- All enemies die
Turret7 = Turret(1, 5, 5);
Turret8 = Turret(0, 8, 2);
Turret9 = Turret(0, 8, 6);
Turret10 = Turret(0, 14, 2);
Turret11 = Turret(0, 14, 6);
Turret12 = Turret(0, 2, 3);
Turret13 = Turret(2, 11, 5);

// Example 3 -- Main tower dies
Turret14 = Turret(2, 5, 5);
Turret15 = Turret(2, 8, 6);
Turret16 = Turret(1, 14, 6);
Turret17 = Turret(0, 2, 3);
Turret18 = Turret(2, 11, 5);

// 300x SQUARE, 400x CIRCLE
EnemyP0 = EnemyP(0, 0, 0);
EnemyP1 = EnemyP(1, 0, 1);
EnemyP2 = EnemyP(2, 0, 2);
EnemyP3 = EnemyP(3, 0, 3);
EnemyP4 = EnemyP(4, 0, 4);
EnemyP5 = EnemyP(5, 0, 5);
EnemyP6 = EnemyP(6, 0, 6);
EnemyP7 = EnemyP(7, 0, 7);
EnemyP8 = EnemyP(8, 0, 8);
EnemyP9 = EnemyP(9, 0, 9);
EnemyP10 = EnemyP(10, 0, 10);
EnemyP11 = EnemyP(11, 0, 11);
EnemyP12 = EnemyP(12, 0, 12);
EnemyP13 = EnemyP(13, 0, 13);
EnemyP14 = EnemyP(14, 0, 14);
EnemyP15 = EnemyP(15, 0, 15);
EnemyP16 = EnemyP(16, 0, 16);
EnemyP17 = EnemyP(17, 0, 17);
EnemyP18 = EnemyP(18, 0, 18);
EnemyP19 = EnemyP(19, 0, 19);
EnemyP20 = EnemyP(20, 0, 20);
EnemyP21 = EnemyP(21, 0, 21);
EnemyP22 = EnemyP(22, 0, 22);
EnemyP23 = EnemyP(23, 0, 23);
EnemyP24 = EnemyP(24, 0, 24);
EnemyP25 = EnemyP(25, 0, 25);
EnemyP26 = EnemyP(26, 0, 26);
EnemyP27 = EnemyP(27, 0, 27);
EnemyP28 = EnemyP(28, 0, 28);
EnemyP29 = EnemyP(29, 0, 29);
EnemyP30 = EnemyP(30, 0, 30);
EnemyP31 = EnemyP(31, 0, 31);
EnemyP32 = EnemyP(32, 0, 32);
EnemyP33 = EnemyP(33, 0, 33);
EnemyP34 = EnemyP(34, 0, 34);
EnemyP35 = EnemyP(35, 0, 35);
EnemyP36 = EnemyP(36, 0, 36);
EnemyP37 = EnemyP(37, 0, 37);
EnemyP38 = EnemyP(38, 0, 38);
EnemyP39 = EnemyP(39, 0, 39);
EnemyP40 = EnemyP(40, 0, 40);
EnemyP41 = EnemyP(41, 0, 41);
EnemyP42 = EnemyP(42, 0, 42);
EnemyP43 = EnemyP(43, 0, 43);
EnemyP44 = EnemyP(44, 0, 44);
EnemyP45 = EnemyP(45, 0, 45);
EnemyP46 = EnemyP(46, 0, 46);
EnemyP47 = EnemyP(47, 0, 47);
EnemyP48 = EnemyP(48, 0, 48);
EnemyP49 = EnemyP(49, 0, 49);
EnemyP50 = EnemyP(50, 0, 50);
EnemyP51 = EnemyP(51, 0, 51);
EnemyP52 = EnemyP(52, 0, 52);
EnemyP53 = EnemyP(53, 0, 53);
EnemyP54 = EnemyP(54, 0, 54);
EnemyP55 = EnemyP(55, 0, 55);
EnemyP56 = EnemyP(56, 0, 56);
EnemyP57 = EnemyP(57, 0, 57);
EnemyP58 = EnemyP(58, 0, 58);
EnemyP59 = EnemyP(59, 0, 59);
EnemyP60 = EnemyP(60, 0, 60);
EnemyP61 = EnemyP(61, 0, 61);
EnemyP62 = EnemyP(62, 0, 62);
EnemyP63 = EnemyP(63, 0, 63);
EnemyP64 = EnemyP(64, 0, 64);
EnemyP65 = EnemyP(65, 0, 65);
EnemyP66 = EnemyP(66, 0, 66);
EnemyP67 = EnemyP(67, 0, 67);
EnemyP68 = EnemyP(68, 0, 68);
EnemyP69 = EnemyP(69, 0, 69);
EnemyP70 = EnemyP(70, 1, 0);
EnemyP71 = EnemyP(71, 1, 1);
EnemyP72 = EnemyP(72, 1, 2);
EnemyP73 = EnemyP(73, 1, 3);
EnemyP74 = EnemyP(74, 1, 4);
EnemyP75 = EnemyP(75, 1, 5);
EnemyP76 = EnemyP(76, 1, 6);
EnemyP77 = EnemyP(77, 1, 7);
EnemyP78 = EnemyP(78, 1, 8);
EnemyP79 = EnemyP(79, 1, 9);
EnemyP80 = EnemyP(80, 1, 10);
EnemyP81 = EnemyP(81, 1, 11);
EnemyP82 = EnemyP(82, 1, 12);
EnemyP83 = EnemyP(83, 1, 13);
EnemyP84 = EnemyP(84, 1, 14);
EnemyP85 = EnemyP(85, 1, 15);
EnemyP86 = EnemyP(86, 1, 16);
EnemyP87 = EnemyP(87, 1, 17);
EnemyP88 = EnemyP(88, 1, 18);
EnemyP89 = EnemyP(89, 1, 19);
EnemyP90 = EnemyP(90, 1, 20);
EnemyP91 = EnemyP(91, 1, 21);
EnemyP92 = EnemyP(92, 1, 22);
EnemyP93 = EnemyP(93, 1, 23);
EnemyP94 = EnemyP(94, 1, 24);
EnemyP95 = EnemyP(95, 1, 25);
EnemyP96 = EnemyP(96, 1, 26);
EnemyP97 = EnemyP(97, 1, 27);
EnemyP98 = EnemyP(98, 1, 28);
EnemyP99 = EnemyP(99, 1, 29);
EnemyP100 = EnemyP(100, 1, 30);
EnemyP101 = EnemyP(101, 1, 31);
EnemyP102 = EnemyP(102, 1, 32);
EnemyP103 = EnemyP(103, 1, 33);
EnemyP104 = EnemyP(104, 1, 34);
EnemyP105 = EnemyP(105, 1, 35);
EnemyP106 = EnemyP(106, 1, 36);
EnemyP107 = EnemyP(107, 1, 37);
EnemyP108 = EnemyP(108, 1, 38);
EnemyP109 = EnemyP(109, 1, 39);
EnemyP110 = EnemyP(110, 1, 40);
EnemyP111 = EnemyP(111, 1, 41);
EnemyP112 = EnemyP(112, 1, 42);
EnemyP113 = EnemyP(113, 1, 43);
EnemyP114 = EnemyP(114, 1, 44);
EnemyP115 = EnemyP(115, 1, 45);
EnemyP116 = EnemyP(116, 1, 46);
EnemyP117 = EnemyP(117, 1, 47);
EnemyP118 = EnemyP(118, 1, 48);
EnemyP119 = EnemyP(119, 1, 49);
EnemyP120 = EnemyP(120, 1, 50);
EnemyP121 = EnemyP(121, 1, 51);
EnemyP122 = EnemyP(122, 1, 52);
EnemyP123 = EnemyP(123, 1, 53);
EnemyP124 = EnemyP(124, 1, 54);
EnemyP125 = EnemyP(125, 1, 55);
EnemyP126 = EnemyP(126, 1, 56);
EnemyP127 = EnemyP(127, 1, 57);
EnemyP128 = EnemyP(128, 1, 58);
EnemyP129 = EnemyP(129, 1, 59);
EnemyP130 = EnemyP(130, 1, 60);
EnemyP131 = EnemyP(131, 1, 61);
EnemyP132 = EnemyP(132, 1, 62);
EnemyP133 = EnemyP(133, 1, 63);
EnemyP134 = EnemyP(134, 1, 64);
EnemyP135 = EnemyP(135, 1, 65);
EnemyP136 = EnemyP(136, 1, 66);
EnemyP137 = EnemyP(137, 1, 67);
EnemyP138 = EnemyP(138, 1, 68);
EnemyP139 = EnemyP(139, 1, 69);
EnemyP140 = EnemyP(140, 1, 70);
EnemyP141 = EnemyP(141, 1, 71);
EnemyP142 = EnemyP(142, 1, 72);
EnemyP143 = EnemyP(143, 1, 73);
EnemyP144 = EnemyP(144, 1, 74);
EnemyP145 = EnemyP(145, 1, 75);
EnemyP146 = EnemyP(146, 1, 76);
EnemyP147 = EnemyP(147, 1, 77);
EnemyP148 = EnemyP(148, 1, 78);
EnemyP149 = EnemyP(149, 1, 79);
EnemyP150 = EnemyP(150, 1, 80);
EnemyP151 = EnemyP(151, 1, 81);
EnemyP152 = EnemyP(152, 1, 82);
EnemyP153 = EnemyP(153, 1, 83);
EnemyP154 = EnemyP(154, 1, 84);
EnemyP155 = EnemyP(155, 1, 85);
EnemyP156 = EnemyP(156, 1, 86);
EnemyP157 = EnemyP(157, 1, 87);
EnemyP158 = EnemyP(158, 1, 88);
EnemyP159 = EnemyP(159, 1, 89);
EnemyP160 = EnemyP(160, 1, 90);
EnemyP161 = EnemyP(161, 1, 91);
EnemyP162 = EnemyP(162, 1, 92);
EnemyP163 = EnemyP(163, 1, 93);
EnemyP164 = EnemyP(164, 1, 94);
EnemyP165 = EnemyP(165, 1, 95);
EnemyP166 = EnemyP(166, 1, 96);
EnemyP167 = EnemyP(167, 1, 97);
EnemyP168 = EnemyP(168, 1, 98);
EnemyP169 = EnemyP(169, 1, 99);
EnemyP170 = EnemyP(170, 1, 100);

Enemy0 = Enemy(0, 0);
Enemy1 = Enemy(1, 0);
Enemy2 = Enemy(2, 0);
Enemy3 = Enemy(3, 0);
Enemy4 = Enemy(4, 0);
Enemy5 = Enemy(5, 0);
Enemy6 = Enemy(6, 0);
Enemy7 = Enemy(7, 0);
Enemy8 = Enemy(8, 0);
Enemy9 = Enemy(9, 0);
Enemy10 = Enemy(10, 0);
Enemy11 = Enemy(11, 0);
Enemy12 = Enemy(12, 0);
Enemy13 = Enemy(13, 0);
Enemy14 = Enemy(14, 0);
Enemy15 = Enemy(15, 0);
Enemy16 = Enemy(16, 0);
Enemy17 = Enemy(17, 0);
Enemy18 = Enemy(18, 0);
Enemy19 = Enemy(19, 0);
Enemy20 = Enemy(20, 0);
Enemy21 = Enemy(21, 0);
Enemy22 = Enemy(22, 0);
Enemy23 = Enemy(23, 0);
Enemy24 = Enemy(24, 0);
Enemy25 = Enemy(25, 0);
Enemy26 = Enemy(26, 0);
Enemy27 = Enemy(27, 0);
Enemy28 = Enemy(28, 0);
Enemy29 = Enemy(29, 0);
Enemy30 = Enemy(30, 0);
Enemy31 = Enemy(31, 0);
Enemy32 = Enemy(32, 0);
Enemy33 = Enemy(33, 0);
Enemy34 = Enemy(34, 0);
Enemy35 = Enemy(35, 0);
Enemy36 = Enemy(36, 0);
Enemy37 = Enemy(37, 0);
Enemy38 = Enemy(38, 0);
Enemy39 = Enemy(39, 0);
Enemy40 = Enemy(40, 0);
Enemy41 = Enemy(41, 0);
Enemy42 = Enemy(42, 0);
Enemy43 = Enemy(43, 0);
Enemy44 = Enemy(44, 0);
Enemy45 = Enemy(45, 0);
Enemy46 = Enemy(46, 0);
Enemy47 = Enemy(47, 0);
Enemy48 = Enemy(48, 0);
Enemy49 = Enemy(49, 0);
Enemy50 = Enemy(50, 0);
Enemy51 = Enemy(51, 0);
Enemy52 = Enemy(52, 0);
Enemy53 = Enemy(53, 0);
Enemy54 = Enemy(54, 0);
Enemy55 = Enemy(55, 0);
Enemy56 = Enemy(56, 0);
Enemy57 = Enemy(57, 0);
Enemy58 = Enemy(58, 0);
Enemy59 = Enemy(59, 0);
Enemy60 = Enemy(60, 0);
Enemy61 = Enemy(61, 0);
Enemy62 = Enemy(62, 0);
Enemy63 = Enemy(63, 0);
Enemy64 = Enemy(64, 0);
Enemy65 = Enemy(65, 0);
Enemy66 = Enemy(66, 0);
Enemy67 = Enemy(67, 0);
Enemy68 = Enemy(68, 0);
Enemy69 = Enemy(69, 0);
Enemy70 = Enemy(70, 1);
Enemy71 = Enemy(71, 1);
Enemy72 = Enemy(72, 1);
Enemy73 = Enemy(73, 1);
Enemy74 = Enemy(74, 1);
Enemy75 = Enemy(75, 1);
Enemy76 = Enemy(76, 1);
Enemy77 = Enemy(77, 1);
Enemy78 = Enemy(78, 1);
Enemy79 = Enemy(79, 1);
Enemy80 = Enemy(80, 1);
Enemy81 = Enemy(81, 1);
Enemy82 = Enemy(82, 1);
Enemy83 = Enemy(83, 1);
Enemy84 = Enemy(84, 1);
Enemy85 = Enemy(85, 1);
Enemy86 = Enemy(86, 1);
Enemy87 = Enemy(87, 1);
Enemy88 = Enemy(88, 1);
Enemy89 = Enemy(89, 1);
Enemy90 = Enemy(90, 1);
Enemy91 = Enemy(91, 1);
Enemy92 = Enemy(92, 1);
Enemy93 = Enemy(93, 1);
Enemy94 = Enemy(94, 1);
Enemy95 = Enemy(95, 1);
Enemy96 = Enemy(96, 1);
Enemy97 = Enemy(97, 1);
Enemy98 = Enemy(98, 1);
Enemy99 = Enemy(99, 1);
Enemy100 = Enemy(100, 1);
Enemy101 = Enemy(101, 1);
Enemy102 = Enemy(102, 1);
Enemy103 = Enemy(103, 1);
Enemy104 = Enemy(104, 1);
Enemy105 = Enemy(105, 1);
Enemy106 = Enemy(106, 1);
Enemy107 = Enemy(107, 1);
Enemy108 = Enemy(108, 1);
Enemy109 = Enemy(109, 1);
Enemy110 = Enemy(110, 1);
Enemy111 = Enemy(111, 1);
Enemy112 = Enemy(112, 1);
Enemy113 = Enemy(113, 1);
Enemy114 = Enemy(114, 1);
Enemy115 = Enemy(115, 1);
Enemy116 = Enemy(116, 1);
Enemy117 = Enemy(117, 1);
Enemy118 = Enemy(118, 1);
Enemy119 = Enemy(119, 1);
Enemy120 = Enemy(120, 1);
Enemy121 = Enemy(121, 1);
Enemy122 = Enemy(122, 1);
Enemy123 = Enemy(123, 1);
Enemy124 = Enemy(124, 1);
Enemy125 = Enemy(125, 1);
Enemy126 = Enemy(126, 1);
Enemy127 = Enemy(127, 1);
Enemy128 = Enemy(128, 1);
Enemy129 = Enemy(129, 1);
Enemy130 = Enemy(130, 1);
Enemy131 = Enemy(131, 1);
Enemy132 = Enemy(132, 1);
Enemy133 = Enemy(133, 1);
Enemy134 = Enemy(134, 1);
Enemy135 = Enemy(135, 1);
Enemy136 = Enemy(136, 1);
Enemy137 = Enemy(137, 1);
Enemy138 = Enemy(138, 1);
Enemy139 = Enemy(139, 1);
Enemy140 = Enemy(140, 1);
Enemy141 = Enemy(141, 1);
Enemy142 = Enemy(142, 1);
Enemy143 = Enemy(143, 1);
Enemy144 = Enemy(144, 1);
Enemy145 = Enemy(145, 1);
Enemy146 = Enemy(146, 1);
Enemy147 = Enemy(147, 1);
Enemy148 = Enemy(148, 1);
Enemy149 = Enemy(149, 1);
Enemy150 = Enemy(150, 1);
Enemy151 = Enemy(151, 1);
Enemy152 = Enemy(152, 1);
Enemy153 = Enemy(153, 1);
Enemy154 = Enemy(154, 1);
Enemy155 = Enemy(155, 1);
Enemy156 = Enemy(156, 1);
Enemy157 = Enemy(157, 1);
Enemy158 = Enemy(158, 1);
Enemy159 = Enemy(159, 1);
Enemy160 = Enemy(160, 1);
Enemy161 = Enemy(161, 1);
Enemy162 = Enemy(162, 1);
Enemy163 = Enemy(163, 1);
Enemy164 = Enemy(164, 1);
Enemy165 = Enemy(165, 1);
Enemy166 = Enemy(166, 1);
Enemy167 = Enemy(167, 1);
Enemy168 = Enemy(168, 1);
Enemy169 = Enemy(169, 1);
Enemy170 = Enemy(170, 1);

system  Enemy0, Enemy1, Enemy2, Enemy3, Enemy4, Enemy5, Enemy6,
Enemy7, Enemy8, Enemy9, Enemy10, Enemy11, Enemy12, Enemy13,
Enemy14, Enemy15, Enemy16, Enemy17, Enemy18, Enemy19, Enemy20,
Enemy21, Enemy22, Enemy23, Enemy24, Enemy25, Enemy26, Enemy27,
Enemy28, Enemy29, Enemy30, Enemy31, Enemy32, Enemy33, Enemy34,
Enemy35, Enemy36, Enemy37, Enemy38, Enemy39, Enemy40, Enemy41,
Enemy42, Enemy43, Enemy44, Enemy45, Enemy46, Enemy47, Enemy48,
Enemy49, Enemy50, Enemy51, Enemy52, Enemy53, Enemy54, Enemy55,
Enemy56, Enemy57, Enemy58, Enemy59, Enemy60, Enemy61, Enemy62,
Enemy63, Enemy64, Enemy65, Enemy66, Enemy67, Enemy68, Enemy69,
Enemy70, Enemy71, Enemy72, Enemy73, Enemy74, Enemy75, Enemy76,
Enemy77, Enemy78, Enemy79, Enemy80, Enemy81, Enemy82, Enemy83,
Enemy84, Enemy85, Enemy86, Enemy87, Enemy88, Enemy89, Enemy90,
Enemy91, Enemy92, Enemy93, Enemy94, Enemy95, Enemy96, Enemy97,
Enemy98, Enemy99, Enemy100, Enemy101, Enemy102, Enemy103, Enemy104,
Enemy105, Enemy106, Enemy107, Enemy108, Enemy109, Enemy110, Enemy111,
Enemy112, Enemy113, Enemy114, Enemy115, Enemy116, Enemy117, Enemy118,
Enemy119, Enemy120, Enemy121, Enemy122, Enemy123, Enemy124, Enemy125,
Enemy126, Enemy127, Enemy128, Enemy129, Enemy130, Enemy131, Enemy132,
Enemy133, Enemy134, Enemy135, Enemy136, Enemy137, Enemy138, Enemy139,
Enemy140, Enemy141, Enemy142, Enemy143, Enemy144, Enemy145, Enemy146,
Enemy147, Enemy148, Enemy149, Enemy150, Enemy151, Enemy152, Enemy153,
Enemy154, Enemy155, Enemy156, Enemy157, Enemy158, Enemy159, Enemy160,
Enemy161, Enemy162, Enemy163, Enemy164, Enemy165, Enemy166, Enemy167,
Enemy168, Enemy169, Enemy170, EnemyP0, EnemyP1, EnemyP2, EnemyP3,
EnemyP4, EnemyP5, EnemyP6, EnemyP7, EnemyP8, EnemyP9, EnemyP10,
EnemyP11, EnemyP12, EnemyP13, EnemyP14, EnemyP15, EnemyP16, EnemyP17,
EnemyP18, EnemyP19, EnemyP20, EnemyP21, EnemyP22, EnemyP23, EnemyP24,
EnemyP25, EnemyP26, EnemyP27, EnemyP28, EnemyP29, EnemyP30, EnemyP31,
EnemyP32, EnemyP33, EnemyP34, EnemyP35, EnemyP36, EnemyP37, EnemyP38,
EnemyP39, EnemyP40, EnemyP41, EnemyP42, EnemyP43, EnemyP44, EnemyP45,
EnemyP46, EnemyP47, EnemyP48, EnemyP49, EnemyP50, EnemyP51, EnemyP52,
EnemyP53, EnemyP54, EnemyP55, EnemyP56, EnemyP57, EnemyP58, EnemyP59,
EnemyP60, EnemyP61, EnemyP62, EnemyP63, EnemyP64, EnemyP65, EnemyP66,
EnemyP67, EnemyP68, EnemyP69, EnemyP70, EnemyP71, EnemyP72, EnemyP73,
EnemyP74, EnemyP75, EnemyP76, EnemyP77, EnemyP78, EnemyP79, EnemyP80,
EnemyP81, EnemyP82, EnemyP83, EnemyP84, EnemyP85, EnemyP86, EnemyP87,
EnemyP88, EnemyP89, EnemyP90, EnemyP91, EnemyP92, EnemyP93, EnemyP94,
EnemyP95, EnemyP96, EnemyP97, EnemyP98, EnemyP99, EnemyP100, EnemyP101,
EnemyP102, EnemyP103, EnemyP104, EnemyP105, EnemyP106, EnemyP107, EnemyP108,
EnemyP109, EnemyP110, EnemyP111, EnemyP112, EnemyP113, EnemyP114, EnemyP115,
EnemyP116, EnemyP117, EnemyP118, EnemyP119, EnemyP120, EnemyP121, EnemyP122,
EnemyP123, EnemyP124, EnemyP125, EnemyP126, EnemyP127, EnemyP128, EnemyP129,
EnemyP130, EnemyP131, EnemyP132, EnemyP133, EnemyP134, EnemyP135, EnemyP136,
EnemyP137, EnemyP138, EnemyP139, EnemyP140, EnemyP141, EnemyP142, EnemyP143,
EnemyP144, EnemyP145, EnemyP146, EnemyP147, EnemyP148, EnemyP149, EnemyP150,
EnemyP151, EnemyP152, EnemyP153, EnemyP154, EnemyP155, EnemyP156, EnemyP157,
EnemyP158, EnemyP159, EnemyP160, EnemyP161, EnemyP162, EnemyP163, EnemyP164,
EnemyP165, EnemyP166, EnemyP167, EnemyP168, EnemyP169, EnemyP170,
        Turret0, Turret1, Turret2, Turret3, Turret4, Turret5, Turret6,
        // Example 2
        // Turret7, Turret8, Turret9, Turret10, Turret11, Turret12, Turret13,
        // Example 3
        // Turret14, Turret15, Turret16, Turret17, Turret18,
        GameTime, MainTowerDamagedUtility;
</system>
	<queries>
		<query>
			<formula>E[&lt;=200; 100](max: time_undamaged)</formula>
			<comment/>
			<result outcome="success" type="quantity" value="87.6721 ± 2.33417 (95% CI)" timestamp="2025-05-01 11:40:44 +0200">
				<details>87.6721 ± 2.33417 (95% CI)</details>
				<plot title="Probability Density Distribution" xaxis="max: time_undamaged" yaxis="probability density">
					<series title="density" type="b(6.228392)" color="0x0000ff" encoding="csv">57.64584347107948,0.003211101768830524
63.87423529414025,0.009633305306491573
70.10262711720101,0.012844407075322096
76.33101894026177,0.024083263266228932
82.55941076332255,0.032111017688305245
88.78780258638332,0.033716568572720505
95.01619440944407,0.03050546680388998
101.24458623250484,0.009633305306491573
107.47297805556562,0.001605550884415262
113.70136987862638,0.003211101768830524
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">87.67210991399274,0.0
87.67210991399274,0.033716568572720505
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=6.2284, bucket count=10
Runs: 100 in total, 100 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [57.646, 119.93]
Mean estimate of displayed sample: 87.672 ± 2.3342 (95% CI)</comment>
				</plot>
				<plot title="Probability Distribution" xaxis="max: time_undamaged" yaxis="probability">
					<series title="probability" type="b(6.228392)" color="0x0000ff" encoding="csv">57.64584347107948,0.02
63.87423529414025,0.06
70.10262711720101,0.08
76.33101894026177,0.15
82.55941076332255,0.2
88.78780258638332,0.21
95.01619440944407,0.19
101.24458623250484,0.06
107.47297805556562,0.01
113.70136987862638,0.02
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">87.67210991399274,0.0
87.67210991399274,0.21
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=6.2284, bucket count=10
Runs: 100 in total, 100 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [57.646, 119.93]
Mean estimate of displayed sample: 87.672 ± 2.3342 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Distribution" xaxis="max: time_undamaged" yaxis="probability">
					<series title="cumulative" type="l" color="0x000000" encoding="csv">57.64584347107948,0.0
63.87423529414025,0.02
70.10262711720101,0.08
76.33101894026177,0.16
82.55941076332255,0.31
88.78780258638332,0.51
95.01619440944407,0.72
101.24458623250484,0.91
107.47297805556562,0.97
113.70136987862638,0.98
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">87.67210991399274,0.0
87.67210991399274,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=6.2284, bucket count=10
Runs: 100 in total, 100 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [57.646, 119.93]
Mean estimate of displayed sample: 87.672 ± 2.3342 (95% CI)</comment>
				</plot>
				<plot title="Cumulative Probability Confidence Intervals" xaxis="max: time_undamaged" yaxis="probability">
					<series title="upper limit" type="k" color="0x0000dd" encoding="csv">57.64584347107948,0.03621669264517642
63.87423529414025,0.07038393247107012
70.10262711720101,0.15155763586442098
76.33101894026177,0.24678759741086234
82.55941076332255,0.4103145541601993
88.78780258638332,0.6113558348383622
95.01619440944407,0.8052063725088185
101.24458623250484,0.9580164043716077
107.47297805556562,0.9937700284616936
113.70136987862638,0.9975686631760574
					</series>
					<series title="lower limit" type="k" color="0xdd0000" encoding="csv">57.64584347107948,0.0
63.87423529414025,0.0024313368239425423
70.10262711720101,0.03517156251816281
76.33101894026177,0.09431028997394622
82.55941076332255,0.22128879213067107
88.78780258638332,0.4080363291554537
95.01619440944407,0.6213329952827324
101.24458623250484,0.8360177449703647
107.47297805556562,0.91482394702572
113.70136987862638,0.9296160675289299
					</series>
					<series title="cumulative" type="l" color="0x000000" encoding="csv">57.64584347107948,0.0
63.87423529414025,0.02
70.10262711720101,0.08
76.33101894026177,0.16
82.55941076332255,0.31
88.78780258638332,0.51
95.01619440944407,0.72
101.24458623250484,0.91
107.47297805556562,0.97
113.70136987862638,0.98
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">87.67210991399274,0.0
87.67210991399274,1.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=6.2284, bucket count=10
Runs: 100 in total, 100 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [57.646, 119.93]
Mean estimate of displayed sample: 87.672 ± 2.3342 (95% CI)</comment>
				</plot>
				<plot title="Frequency Histogram" xaxis="max: time_undamaged" yaxis="count">
					<series title="count" type="b(6.228392)" color="0x0000ff" encoding="csv">57.64584347107948,2.0
63.87423529414025,6.0
70.10262711720101,8.0
76.33101894026177,15.0
82.55941076332255,20.0
88.78780258638332,21.0
95.01619440944407,19.0
101.24458623250484,6.0
107.47297805556562,1.0
113.70136987862638,2.0
					</series>
					<series title="average" type="pl" color="0x00dd00" encoding="csv">87.67210991399274,0.0
87.67210991399274,21.0
					</series>
					<comment>Parameters: α=0.05, ε=0.05, bucket width=6.2284, bucket count=10
Runs: 100 in total, 100 (100%) displayed, 0 (0%) remaining
Span of displayed sample: [57.646, 119.93]
Mean estimate of displayed sample: 87.672 ± 2.3342 (95% CI)</comment>
				</plot>
			</result>
		</query>
		<query>
			<formula>Pr[&lt;=200; 100]([] main_tower_life_points &gt;= 0)</formula>
			<comment/>
			<result outcome="success" type="interval" value="≥ 0.963783 (95% CI)" timestamp="2025-05-01 11:43:32 +0200">
				<details>≥ 0.963783 (95% CI)</details>
			</result>
		</query>
		<query>
			<formula/>
			<comment/>
		</query>
	</queries>
</nta>
